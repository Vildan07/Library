"""
–î–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–Ω–∏–≥ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π.
–ö–Ω–∏–≥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç:
1. –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–∏–≥–∏.
2. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
3. –ò–º—è –∞–≤—Ç–æ—Ä–∞
4. –ì–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏

–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:
1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏.
2. –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –ø–æ ID.
3. –ü–æ–∫–∞–∑ –≤—Å–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.
4. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ –ø–æ: –ù–∞–∑–≤–∞–Ω–∏—é, –ê–≤—Ç–æ—Ä—É, –ì–æ–¥—É.
5. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–Ω–∏–≥–∏.
"""
from datetime import datetime


class Book:
    """–≠—Ç–æ—Ç –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏"""
    def __init__(self, book_id: int, title: str, author: str, year: int, status: str = "–≤ –Ω–∞–ª–∏—á–∏–∏"):
        self.id = book_id
        self.title = title
        self.author = author
        self.year = year
        self.status = status

    def to_line(self):
        """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–∞–π–ª–µ"""
        return f"{self.id}|{self.title}|{self.author}|{self.year}|{self.status}"

    @staticmethod
    def from_line(line: str):
        """–°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–Ω–∏–≥–∏ —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Å—Ç—Ä–æ–∫–∏"""
        part = line.strip("").split("|")
        return Book(int(part[0]), part[1], part[2], int(part[3]), part[4])


class Library:
    """–≠—Ç–æ—Ç –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π"""
    def __init__(self, data_file: str = "library_data.txt"):
        self.data_file = data_file
        self.books = self.load_books()

    def load_books(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–Ω–∏–≥–∏ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞"""
        books = []
        try:
            with open(self.data_file, "r", encoding="utf-8") as file:
                books = [Book.from_line(line) for line in file if line.strip()]
        except FileNotFoundError:
            print("–§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω ü§∑‚Äç‚ôÇÔ∏è. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return books

    def save_books(self, append: bool = False, new_book: Book = None):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–Ω–∏–≥–∏ –≤ —Ñ–∞–π–ª"""
        if append and new_book:
            with open(self.data_file, "a", encoding="utf-8") as file:
                file.write(new_book.to_line() + "\n")
        else:
            with open(self.data_file, "w", encoding="utf-8") as file:
                for book in self.books:
                    file.write(book.to_line() + "\n")

    def add_book(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∫–Ω–∏–≥—É —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö"""
        title = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ").strip()
        if not title:
            print("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return
        author = input("–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏: ").strip()
        if not author:
            print("–ê–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return
        try:
            year = int(input("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏: ").strip())
            if year < 0 or year > datetime.now().year:
                print("–ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∏–ª–∏ –ø—Ä–µ–≤—ã—à–∞—Ç—å —Ç–µ–∫—É—â–∏–π –≥–æ–¥!")
                return
        except ValueError:
            print("–ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
            return

        new_id = max((book.id for book in self.books), default=0) + 1
        new_book = Book(new_id, title, author, year)
        self.books.append(new_book)
        self.save_books()
        self.save_books(append=True, new_book=new_book)
        print(f"–ö–Ω–∏–≥–∞ '{title}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å ID {new_id}.")

    def find_book_by_id(self, book_id: int):
        """–ù–∞—Ö–æ–¥–∏—Ç –∫–Ω–∏–≥—É –ø–æ ID."""
        for book in self.books:
            if book.id == book_id:
                return book
        return None

    def search_books(self):
        """–ò—â–µ—Ç –∫–Ω–∏–≥–∏ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º."""
        print("–ü–æ–∏—Å–∫ –ø–æ:\n1. –ù–∞–∑–≤–∞–Ω–∏—é\n2. –ê–≤—Ç–æ—Ä—É\n3. –ì–æ–¥—É")
        search_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–∏—Å–∫–∞: ").strip()
        results = []

        if search_choice == "1":
            title = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ").strip()
            results = [book for book in self.books if title.lower() in book.title.lower()]
        elif search_choice == "2":
            author = input("–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞: ").strip()
            results = [book for book in self.books if author.lower() in book.author.lower()]
        elif search_choice == "3":
            try:
                year = int(input("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥: ").strip())
                results = [book for book in self.books if book.year == year]
            except ValueError:
                print("–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
                return
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!")
            return

        if results:
            self.display_books(results)
        else:
            print("–ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    def display_books(self, books=None):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥."""
        books = books or self.books
        if not books:
            print("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞.")
        else:
            print(f"{'ID'} {'–ù–∞–∑–≤–∞–Ω–∏–µ'} {'–ê–≤—Ç–æ—Ä'} {'–ì–æ–¥'} {'–°—Ç–∞—Ç—É—Å'}")
            print("-" * 100)
            for book in books:
                print(f"{book.id} {book.title} {book.author} {book.year} {book.status}")

    def change_status(self):
        """–ò–∑–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏."""
        try:
            book_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–Ω–∏–≥–∏: ").strip())
            book = self.find_book_by_id(book_id)
            if book:
                new_status = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å ('–≤ –Ω–∞–ª–∏—á–∏–∏' –∏–ª–∏ '–≤—ã–¥–∞–Ω–∞'): ").strip()
                if new_status in ["–≤ –Ω–∞–ª–∏—á–∏–∏", "–≤—ã–¥–∞–Ω–∞"]:
                    book.status = new_status
                    self.save_books()
                    print(f"–°—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏ —Å ID {book_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ '{new_status}'.")
                else:
                    print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–≤ –Ω–∞–ª–∏—á–∏–∏' –∏–ª–∏ '–≤—ã–¥–∞–Ω–∞'.")
            else:
                print("–ö–Ω–∏–≥–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        except ValueError:
            print("ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")

    def delete_book(self):
        """–£–¥–∞–ª—è–µ—Ç –∫–Ω–∏–≥—É –ø–æ ID."""
        try:
            self.display_books()
            book_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–Ω–∏–≥–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip())
            book = self.find_book_by_id(book_id)
            if book:
                self.books.remove(book)
                self.save_books()
                print(f"–ö–Ω–∏–≥–∞ —Å ID {book_id} –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º {book.title} —É–¥–∞–ª–µ–Ω–∞.")
            else:
                print("–ö–Ω–∏–≥–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        except ValueError:
            print("ID –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!")

def main():
    manager = Library()
    while True:
        print("\n1. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É\n2. –£–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É\n3. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥\n4. –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏\n5. –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏\n6. –í—ã—Ö–æ–¥")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        if choice == "1":
            manager.add_book()
        elif choice == "2":
            manager.delete_book()
        elif choice == "3":
            manager.search_books()
        elif choice == "4":
            manager.display_books()
        elif choice == "5":
            manager.change_status()
        elif choice == "6":
            print("–í—ã –≤—ã—à–ª–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏ –Ω–∞–¥–µ–µ–º—Å—è —á—Ç–æ –≤—ã –µ—â—ë –≤–µ—Ä–Ω–µ—Ç–µ—Å—å –∫ –Ω–∞–ºüòä. ")
            break
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä üò¢.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —É –≤–∞—Å –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—å—Å—èüëå.")

if __name__ == "__main__":
    main()
